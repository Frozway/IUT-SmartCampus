<div class="panel shadow mt-4">
    <div class="mt-2">
        <h2>Visualisation des données</h2>
        <div class="row">
            <div class="col-md-4">
                <div class="chart-container" style="height: 26vh;">
                    <canvas id="temperatureChart" style="width: 100%"></canvas>
                </div>
            </div>
            <div class="col-md-4">
                <div class="chart-container" style="height: 26vh;">
                    <canvas id="co2Chart" style="width: 100%"></canvas>
                </div>
            </div>
            <div class="col-md-4">
                <div class="chart-container" style="height: 26vh;">
                    <canvas id="humidityChart" style="width: 100%"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

{% set dataByDate = {} %}
{% for value in data %}
    {% if value.dateCapture != 'Failed to obtain time' %}
        {% set currentDate = value.dateCapture|date('Y-m-d H:i:s') %}
        {% if value.nom != 'pres' %}
            {% if attribute(dataByDate, currentDate) is not defined %}
                {% set dataByDate = dataByDate|merge({(currentDate): {'temp': null, 'co2': null, 'hum': null, (value.nom): value.valeur}}) %}
            {% else %}
                {% set currentData = attribute(dataByDate, currentDate) %}
                {% set currentData = currentData|merge({(value.nom): value.valeur}) %}
                {% set dataByDate = dataByDate|merge({(currentDate): currentData}) %}
            {% endif %}
        {% endif %}
    {% endif %}
{% else %}
    <div class="alert alert-info mt-4">Aucune donnée à afficher</div>
{% endfor %}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var labels = [];
        var temperatureData = [];
        var co2Data = [];
        var humidityData = [];

        // Si le nombre de données est inférieur à 864 (24h), on remplit une variable avec la date du jour
        {% if data|length <= 864 %}
            var dayDate = '{{ data[0].dateCapture|date('Y-m-d') }}';
        {% else %}
            var dayDate = '';
        {% endif %}

        // Créer des tableaux pour stocker les données moyennes
        var averageTemperatureData = [];
        var averageCo2Data = [];
        var averageHumidityData = [];

        {% set previousHour = '' %}
        {% set temperatureSum = 0 %}
        {% set co2Sum = 0 %}
        {% set humiditySum = 0 %}
        {% set readingsPerHour = 0 %}

        {% for currentDate, values in dataByDate %}
            {% set currentHour = currentDate|date('H') %}

            // Vérifier si l'heure a changé
            {% if currentHour != previousHour %}
                // Calculer la moyenne pour l'heure précédente
                {% if readingsPerHour > 0 %}
                    averageTemperatureData.push({{ temperatureSum / readingsPerHour }});
                    averageCo2Data.push({{ co2Sum / readingsPerHour }});
                    averageHumidityData.push({{ humiditySum / readingsPerHour }});
                {% else %}
                    // Aucune donnée pour l'heure précédente
                    averageTemperatureData.push(null);
                    averageCo2Data.push(null);
                    averageHumidityData.push(null);
                {% endif %}

                // Réinitialiser les variables pour l'heure suivante
                {% set temperatureSum = 0 %}
                {% set co2Sum = 0 %}
                {% set humiditySum = 0 %}
                {% set readingsPerHour = 0 %}

                // Si le nombre de données est inférieur à 864 (24h), on ne prend que l'heure et les minutes
                {% if data|length <= 864 %}
                    labels.push('{{ currentDate|date('H:i') }}');
                {% else %}
                    labels.push('{{ currentDate|date('d/m H:i') }}');
                {% endif %}
            {% endif %}

            // Ajouter une vérification pour 'nan'
            {% set tempValue = values['temp'] is not null and values['temp'] != 'nan' and values['temp'] != 'Error reading temperature!' and values['temp'] != '' ? values['temp'] : null %}
            {% set co2Value = values['co2'] is not null and values['co2'] != 'nan' and values['co2'] != 'Error reading CO2!' and values['co2'] != '' ? values['co2'] : null %}
            {% set humValue = values['hum'] is not null and values['hum'] != 'nan' and values['hum'] != 'Error reading humidity!' and values['hum'] != '' ? values['hum'] : null %}

            // Ajouter les valeurs aux sommes si elles ne sont pas nulles
            {% if tempValue is not null %}
                {% set temperatureSum = temperatureSum + tempValue %}
                {% set readingsPerHour = readingsPerHour + 1 %}
            {% endif %}

            {% if co2Value is not null %}
                {% set co2Sum = co2Sum + co2Value %}
            {% endif %}

            {% if humValue is not null %}
                {% set humiditySum = humiditySum + humValue %}
            {% endif %}


            {% set previousHour = currentHour %}
        {% endfor %}

        // Ajouter la dernière moyenne si des lectures ont été prises pendant la dernière heure
        {% if readingsPerHour > 0 %}
            averageTemperatureData.push({{ temperatureSum / readingsPerHour }});
            averageCo2Data.push({{ co2Sum / readingsPerHour }});
            averageHumidityData.push({{ humiditySum / readingsPerHour }});
        {% else %}
            // Aucune donnée pour la dernière heure
            averageTemperatureData.push(null);
            averageCo2Data.push(null);
            averageHumidityData.push(null);
        {% endif %}

        // Inverser l'ordre des données
        labels.reverse();
        averageTemperatureData.reverse();
        averageCo2Data.reverse();
        averageHumidityData.reverse();

        // afficher les données une fois traitées dans la console
        console.log(labels, averageTemperatureData, averageCo2Data, averageHumidityData, dayDate);

        createCharts(labels, averageTemperatureData, averageCo2Data, averageHumidityData, dayDate);
    });
</script>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="{{ asset('js/roomDataCharts.js') }}"></script>
